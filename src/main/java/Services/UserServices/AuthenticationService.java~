package UserServices;

import Domain.User;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.TypedQuery;
import org.mindrot.jbcrypt.BCrypt;

import java.util.List;

@Stateless
public class AuthenticationService {


    @PersistenceContext(unitName = "persistence-unit")
    private EntityManager entityManager;

    public User login(String email, String password) {
        TypedQuery<User> query = entityManager.createQuery("SELECT u FROM User u WHERE u.email = :email", User.class);
        query.setParameter("email", email);
        List<User> users = query.getResultList();
        if (users.isEmpty()) {
            throw new IllegalArgumentException("Invalid email or password");
        }

        User user = users.get(0);
        if (BCrypt.checkpw(password, user.getPassword())) {
            return user; // Successful login
        } else {
            throw new IllegalArgumentException("Invalid email or password");
        }
    }
}
